version: '3.8'

services:
  app:
    build: .
    restart: always
    ports:
      - "8501:8501"
    environment:
      - DB_HOST=db
      - DB_NAME=ordens_servico
      - DB_USER=postgres
      - DB_PASSWORD=1234
      - TZ=America/Sao_Paulo
    depends_on:
      db:
        # Garante que a aplicação só inicie após o banco de dados
        # estar 100% pronto para aceitar conexões.
        condition: service_healthy

  db:
    image: postgres:13
    restart: always
    environment:
      - POSTGRES_DB=ordens_servico
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1234
      - TZ=America/Sao_Paulo
    volumes:
      # Volume persistente para os dados do banco de dados
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      # CORREÇÃO: Verifica o banco de dados 'postgres' que sempre existe por padrão.
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  backup:
    build:
      context: .
      dockerfile: backup.dockerfile
    restart: always
    environment:
      - DB_HOST=db
      - DB_NAME=ordens_servico
      - DB_USER=postgres
      - DB_PASSWORD=1234
      - TZ=America/Sao_Paulo
    volumes:
      # Mapeia a pasta /backups do container para a pasta local ./backups
      - ./backups:/backups
    depends_on:
      db:
        condition: service_healthy

volumes:
  postgres_data:
